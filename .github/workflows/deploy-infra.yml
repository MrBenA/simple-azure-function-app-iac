name: Deploy Infrastructure

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths: [ 'infra/**' ]

permissions:
  contents: read

jobs:
  deploy-infrastructure:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: false
          allow-no-subscriptions: false

      - name: Create Resource Group
        run: |
          az group create \
            --name rg-simple-func-iac \
            --location westeurope \
            --output none

      - name: Test Azure CLI Connection
        run: |
          az account show --output table
          az group list --output table

      - name: Deploy Infrastructure (Single Step)
        shell: bash
        run: |
          set -e
          
          echo "=== Starting Infrastructure Deployment ==="
          
          # Try different deployment approach with inline parameters
          echo "Attempting deployment with inline parameters..."
          
          # Method 1: Try with --no-wait flag and inline parameters
          timeout 300 az deployment group create \
            --resource-group rg-simple-func-iac \
            --template-file infra/main.bicep \
            --parameters \
              functionAppName='simple-func-iac-ba' \
              storageAccountName='simplefunciacba' \
              appInsightsName='simple-func-iac-ba-insights' \
              hostingPlanName='simple-func-iac-ba-plan' \
            --name infrastructure-deployment \
            --mode Incremental \
            --no-wait \
            || echo "Deployment started in background"
          
          # Wait for deployment to complete
          echo "Waiting for deployment to complete..."
          az deployment group wait \
            --resource-group rg-simple-func-iac \
            --name infrastructure-deployment \
            --created \
            --timeout 600
          
          echo "Deployment completed successfully"

      - name: Get Function App Name
        id: get-function-app
        run: |
          FUNCTION_APP_NAME=$(az deployment group show \
            --resource-group rg-simple-func-iac \
            --name infrastructure-deployment \
            --query properties.outputs.functionAppName.value \
            --output tsv)
          echo "function-app-name=$FUNCTION_APP_NAME" >> $GITHUB_OUTPUT

      - name: Configure GitHub Deployment
        run: |
          # Note: This will be configured manually in the portal for now
          # Future enhancement: Use Azure CLI to configure GitHub deployment source
          echo "Function App created: ${{ steps.get-function-app.outputs.function-app-name }}"
          echo "Configure GitHub deployment manually in Azure Portal"